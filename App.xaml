<Application x:Class="QRCodeGenerator.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:QRCodeGenerator"
             StartupUri="MainWindow.xaml">

    <Application.Resources>

        <!--My Button Style-->
        <Style x:Key="MyButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Border" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" 
                                Padding="{TemplateBinding Padding}" Margin="{TemplateBinding Margin}">
                            <Label x:Name="Label" Content="{TemplateBinding Content}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                   FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" Foreground="{TemplateBinding Foreground}"
                                   Margin="0" Padding="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter TargetName="Label" Property="Foreground" Value="Black"/>
                                <Setter TargetName="Border" Property="Background" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="Black"/>
                                <Setter TargetName="Label" Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--MyToggleButton-->
        <Style x:Key="ToggleButtonStyleBaseApp" TargetType="{x:Type ToggleButton}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <StackPanel Orientation="Horizontal">
                            <Border x:Name="on" Width="30" Height="25" Background="LightGray" CornerRadius="2,0,0,4" Margin="10,0,0,0">
                                <Label x:Name="onText" Content="Yes" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14" Padding="0"/>
                            </Border>
                            <Border x:Name="off" Width="30" Height="25" Background="LightGray" CornerRadius="0,2,4,0">
                                <Label x:Name="offText" Content="No" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14" Padding="0"/>
                            </Border>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="on" Property="Background" Value="Green"/>
                                <Setter TargetName="onText" Property="Foreground" Value="White"/>
                                <Setter TargetName="offText" Property="Foreground" Value="Gray"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="off" Property="Background" Value="RoyalBlue"/>
                                <Setter TargetName="offText" Property="Foreground" Value="White"/>
                                <Setter TargetName="onText" Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Application.Resources>
</Application>
